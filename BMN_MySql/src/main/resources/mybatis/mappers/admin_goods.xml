<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.admin.goods">
<!-- 리절트 맵 정의 -->	
	<resultMap id="goodsResult" type="goodsVO">
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />

		<result property="goods_price" column="goods_price" />
		<result property="goods_publisher" column="goods_publisher" />
		
		<result property="goods_status" column="goods_status" />
		<result property="goods_sales_price" column="goods_sales_price" />
		<result property="goods_published_date" column="goods_published_date" />

		<result property="goods_isbn" column="goods_isbn" />
		<result property="goods_delivery_price" column="goods_delivery_price" />
		<result property="goods_delivery_date" column="goods_delivery_date" />
		
		<result property="goods_fileName" column="fileName" />
		<result property="goods_sort" column="goods_sort" />

		<result property="goods_intro" column="goods_intro" />
		<result property="goods_contents_order" column="goods_contents_order" javaType="java.lang.String" jdbcType="CLOB"  />
	</resultMap>	

	<resultMap id="imageResult" type="imageFileVO">
	   <result property="goods_id" column="goods_id" />
	   <result property="fileName" column="fileName" />
	   <result property="reg_id" column="reg_id" />
	   <result property="image_id" column="image_id" />
	   <result property="fileType" column="fileType" />
	</resultMap>
	
	<resultMap id="orderGoodsResult" type="orderVO">
		<result property="order_id" column="order_id" />
		<result property="member_id" column="member_id" />
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />
		<result property="goods_sales_price" column="goods_sales_price" />
		<result property="order_total_price" column="order_total_price" />
		<result property="order_goods_qty" column="order_goods_qty" />
		
		<result property="orderer_name" column="orderer_name" />
		<result property="receiver_name" column="receiver_name" />
		<result property="receiver_hp1" column="receiver_hp1" />
		<result property="receiver_hp2" column="receiver_hp2" />
		<result property="receiver_hp3" column="receiver_hp3" />
		
		<result property="receiver_tel1" column="receiver_tel1" />
		<result property="receiver_tel2" column="receiver_tel2" />
		<result property="receiver_tel3" column="receiver_tel3" />
		<result property="delivery_address" column="delivery_address" />
		<result property="delivery_message" column="delivery_message" />
		
		<result property="delivery_method" column="delivery_method" />
		<result property="gift_wrapping" column="gift_wrapping" />
		<result property="pay_method" column="pay_method" />
		<result property="card_com_name" column="card_com_name" />
		<result property="card_pay_month" column="card_pay_month" />
		
		<result property="pay_orderer_hp_num" column="pay_orderer_hp_num" />
		<result property="pay_order_time" column="pay_order_time" />
		<result property="delivery_state" column="delivery_state" />
		<result property="final_total_price" column="final_total_price" />
		<result property="goods_qty" column="goods_qty" />
		
		<result property="goods_fileName" column="goods_fileName" />
	</resultMap>
	
	<insert id="insertNewGoods" parameterType="java.util.Map">
	    <selectKey resultType="String" keyProperty="goods_id" order="BEFORE">
	        SELECT COALESCE(MAX(GOODS_ID), 0) + 1 FROM T_SHOPPING_GOODS
	    </selectKey>
	    <![CDATA[
	        INSERT INTO t_shopping_goods (
				goods_id,
	            goods_sort,
	            goods_title,
	            goods_publisher,
	            goods_price,
	            goods_sales_price,
	            goods_published_date,
	            goods_status
	        )
	        VALUES (
	        	#{goods_id},
	            #{goods_sort},
	            #{goods_title},
	            #{goods_publisher},
	            #{goods_price},
	            #{goods_sales_price},			
	            #{goods_published_date},
	            #{goods_status}
	        )
	    ]]>
	</insert>
	
	<insert id="insertGoodsImageFile" parameterType="imageFileVO">
    <selectKey resultType="int" keyProperty="image_id" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
    <![CDATA[
        INSERT INTO t_goods_detail_image (
            image_id,
            goods_id,
            fileName,
            fileType,
            reg_id
        )
        VALUES (
            NULL,
            LAST_INSERT_ID(),
            #{fileName},
            #{fileType},
            #{reg_id}
        )
    ]]>
	</insert>
	
	<select id="selectNewGoodsList" resultMap="goodsResult" parameterType="java.util.Map">
    	SELECT *
			FROM (
			    SELECT
			        @goods_rownum := @goods_rownum + 1 AS recNum,
			        goods_id,
			        goods_title,
			        goods_sales_price,
			        DATE_FORMAT(goods_creDate, '%Y-%m-%d') AS goods_creDate
			    FROM (
			        SELECT
			            goods_id,
			            goods_title,
			            goods_sales_price,
			            goods_creDate
			        FROM t_shopping_goods
			        WHERE DATE_FORMAT(goods_creDate, '%Y-%m-%d') BETWEEN #{beginDate} AND #{endDate}
			        ORDER BY goods_id DESC
			    ) AS g, (SELECT @goods_rownum := 0) AS r
			) AS t
			WHERE
			    recNum BETWEEN (#{section}-1)*100 + (#{pageNum}-1)*10 + 1 AND (#{section}-1)*100 + (#{pageNum})*10
	</select>
	
	<select id="selectOrderGoodsList" resultMap="orderGoodsResult"   parameterType="java.util.Map"  >
		  	SELECT * FROM (
		    SELECT rowNum AS recNum, t.*
		    FROM (
		        SELECT *
		        FROM t_shopping_order
		        WHERE DATE_FORMAT(pay_order_time, '%Y-%m-%d') BETWEEN #{beginDate} AND #{endDate}
		        <if test="search_type=='orderer_id'">
		            AND orderer_id = #{search_word}
		        </if>
		        <if test="search_type=='orderer_name'">
		            AND orderer_name = #{search_word}
		        </if>
		        <if test="search_type=='orderer_hp_num'">
		            AND pay_orderer_hp_num = #{search_word}
		        </if>
		        ORDER BY pay_order_time DESC
		    ) t
		) 
		WHERE recNum BETWEEN (#{section}-1)*100 + (#{pageNum}-1)*10 + 1 AND (#{section}-1)*100 + (#{pageNum})*10;				        
	</select>
	
 

	
	<select id="selectGoodsDetail" resultMap="goodsResult"   parameterType="String"  >
		    SELECT g.*, DATE_FORMAT(g.goods_published_date, '%Y-%m-%d') AS goods_published_date, d.fileName
			FROM t_shopping_goods g, t_goods_detail_image d
			WHERE g.goods_id = d.goods_id
			AND d.filetype = 'main_image'
			AND g.goods_id = #{goods_id}
			ORDER BY g.goods_id;
	</select>
	
	<select id="selectGoodsImageFileList" resultMap="imageResult"   parameterType="String"  >
	    	SELECT *
			FROM t_goods_detail_image
			WHERE goods_id = #{goods_id}
			ORDER BY image_id ASC;
	</select>	
	
	
	<update id="updateGoodsInfo" parameterType="java.util.HashMap" >
	   update t_shopping_goods
	    <set> 
	      <if test=" goods_sort!='' and goods_sort!=null">
	        goods_sort=#{goods_sort},
	      </if>
	      <if test=" goods_title!='' and goods_title!=null">
	        goods_title=#{goods_title},
	      </if>

	      <if test=" goods_publisher!='' and goods_publisher!=null">
	        goods_publisher=#{goods_publisher},
	      </if>
	      <if test=" goods_price!='' and goods_price!=null">
	        goods_price=#{goods_price},
	      </if>
	      <if test=" goods_published_date!='' and goods_published_date!=null">
	        goods_published_date=#{goods_published_date},
	      </if>
	      <if test=" goods_sales_price!='' and goods_sales_price!=null">
	        goods_sales_price=#{goods_sales_price},
	      </if>

	      <if test=" goods_page_total!='' and goods_page_total!=null">
	        goods_page_total=#{goods_page_total},
	      </if>
	      <if test=" goods_isbn!='' and goods_isbn!=null">
	        goods_isbn=#{goods_isbn},
	      </if>
	      <if test=" goods_delivery_price!='' and goods_delivery_price!=null">
	        goods_delivery_price=#{goods_delivery_price},
	      </if>
	      <if test=" goods_delivery_date!='' and goods_delivery_date!=null">
	        goods_delivery_date=#{goods_delivery_date},
	      </if>
	      <if test=" goods_status!='' and goods_status!=null">
	        goods_status=#{goods_status},
	      </if>

	      <if test=" goods_intro!='' and goods_intro!=null">
	        goods_intro=#{goods_intro},
	      </if>
	      <if test=" publisher_comment!='' and publisher_comment!=null">
	        publisher_comment=#{publisher_comment},
	      </if>
	      <if test=" recommendation!='' and recommendation!=null">
	        recommendation=#{recommendation},
	      </if>
	      <if test=" goods_contents_order!='' and goods_contents_order!=null">
	        goods_contents_order=#{goods_contents_order:VARCHAR}
	      </if>
	     </set>
	    where 
	    goods_id=#{goods_id}
	
	</update>	
	<update id="updateGoodsImage" parameterType="imageFileVO">
		update t_goods_detail_image
		set fileName=#{fileName}
		where	 
		goods_id=#{goods_id} and image_id=#{image_id}
	</update>
	
	<delete id="deleteGoodsImage" parameterType="String">
	  delete from t_goods_detail_image
	  where image_id=#{image_id}
	</delete>
	
	<update id="updateOrderGoods" parameterType="java.util.HashMap">
	   UPDATE t_shopping_order
	   <set> 
	      <if test="delivery_state!='' and delivery_state!=null">
	        delivery_state = #{delivery_state},
	      </if>
	      <if test="delivery_address!='' and delivery_address!=null">
	        delivery_address = #{delivery_address},
	      </if>
	   </set>
	   WHERE 
	   order_id = #{order_id}
	</update>
	
	
	
	<select id="searchGoodsList" resultMap="goodsResult" parameterType="String">
	  <![CDATA[
	    SELECT * FROM t_shopping_goods
	    WHERE goods_title LIKE CONCAT('%', #{keyword}, '%')
	      OR goods_status LIKE CONCAT('%', #{keyword}, '%')
	      OR goods_sort LIKE CONCAT('%', #{keyword}, '%')
	  ]]>
	  <if test="isNumericKeyword">
	    <![CDATA[
	      OR goods_price = CAST(#{keyword} AS DECIMAL(10,2))
	    ]]>
	  </if>
	  <![CDATA[
	    ORDER BY goods_id DESC
	  ]]>
	</select>
	
</mapper>

