<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.admin.customer">
<!-- 리절트 맵 정의 -->	
	<resultMap id="noticeResult" type="noticeVO">
		<result property="notice_id" column="notice_id" />
		<result property="notice_title" column="notice_title" />
		<result property="notice_content" column="notice_content" />
		<result property="notice_date" column="notice_date" />
		<result property="startRowNum" column="startRowNum" />
		<result property="endRowNum" column="endRowNum" />
	</resultMap>	
	
	<resultMap id="faqResult" type="faqVO">
		<result property="faq_id" column="faq_id" />
		<result property="faq_title" column="faq_title" />
		<result property="faq_content" column="faq_content" />
		<result property="faq_date" column="faq_date" />
		<result property="startRowNum" column="startRowNum" />
		<result property="endRowNum" column="endRowNum" />
	</resultMap>	
	
	<resultMap id="qnaResult" type="qnaVO">
		<result property="qna_id" column="qna_id" />
		<result property="goods_id" column="goods_id" />
		<result property="member_id" column="member_id" />
		<result property="qna_title" column="qna_title" />
		<result property="qna_content" column="qna_content" />
		<result property="qna_comment" column="qna_comment" />
		<result property="qna_date" column="qna_date" />
		<result property="startRowNum" column="startRowNum" />
		<result property="endRowNum" column="endRowNum" />
		<result property="fileName" column="fileName" />
		<result property="member_name" column="member_name" />
	</resultMap>
	
	<resultMap id="reviewResult" type="reviewVO">
		<result property="review_id" column="review_id" />
		<result property="goods_id" column="goods_id" />
		<result property="order_id" column="order_id" />
		<result property="member_id" column="member_id" />
		<result property="review_content" column="review_content" />
		<result property="review_comment" column="review_comment" />
		<result property="review_date" column="review_date" />
		<result property="review_star" column="review_star" />
		<result property="startRowNum" column="startRowNum" />
		<result property="endRowNum" column="endRowNum" />
		<result property="fileName" column="fileName" />
		<result property="member_name" column="member_name" />
	</resultMap>
   
   <!-- 공지사항 -->
   <select id="NoticeList" parameterType="noticeVO" resultMap="noticeResult"   >
         SELECT *
		FROM (
		    SELECT temp_table.*, @rownum:=@rownum+1 AS rnum
		    FROM (
		        SELECT *
		        FROM T_SHOPPING_NOTICE
		        CROSS JOIN (SELECT @rownum:=0) r
		        ORDER BY notice_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="selectNoticeDetail" resultMap="noticeResult"   parameterType="String"  >
		    select * from t_shopping_notice
	        where notice_id=#{notice_id}
	</select>
	
	<update id="modifyNotice" parameterType="java.util.HashMap" >
	   update t_shopping_notice
	    <set> 
	      <if test=" notice_title!='' and notice_title!=null">
	        notice_title=#{notice_title},
	      </if>
	      <if test=" notice_content!='' and notice_content!=null">
	        notice_content=#{notice_content},
	      </if>
	     </set>
	    where 
	    notice_id=#{notice_id}
	
	</update>		
	
	<delete id="deleteNotice" parameterType="String">
	      delete from t_shopping_notice
	      where notice_id=#{notice_id}
	</delete>
	
	<select id="NoticeKeywordSearch" resultMap="noticeResult" parameterType="noticeVO">
	    SELECT *
		FROM (
		    SELECT temp_table.*, ROW_NUMBER() OVER (ORDER BY notice_id DESC) AS rnum
		    FROM (
		        SELECT *
		        FROM t_shopping_notice
		        WHERE notice_title LIKE CONCAT('%', #{keyword}, '%') OR notice_content LIKE CONCAT('%', #{keyword}, '%')
		        ORDER BY notice_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<insert id="insertNotice" parameterType="java.util.HashMap">
	    <![CDATA[
	    INSERT INTO T_SHOPPING_NOTICE (notice_id, notice_title, notice_content, notice_date)
	    SELECT COALESCE(MAX(notice_id), 0) + 1, #{notice_title}, #{notice_content}, NOW()
	    FROM T_SHOPPING_NOTICE
	    ]]>
	</insert>
  
  
  
  
  <!-- FAQ -->
  	<select id="FaqList" parameterType="faqVO" resultMap="faqResult">
	    SELECT *
		FROM (
		    SELECT temp_table.*, @rownum:=@rownum+1 AS rnum
		    FROM (
		        SELECT *
		        FROM T_SHOPPING_FAQ
		        CROSS JOIN (SELECT @rownum:=0) r
		        ORDER BY faq_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="selectFaqDetail" resultMap="faqResult"   parameterType="String"  >
	    SELECT *
	    FROM t_shopping_faq
	    WHERE faq_id = #{faq_id}
	</select>
	
	<update id="modifyFaq" parameterType="java.util.HashMap">
    UPDATE t_shopping_faq
    <set>
        <if test="faq_title != null and faq_title != ''">
            faq_title = #{faq_title},
        </if>
        <if test="faq_content != null and faq_content != ''">
            faq_content = #{faq_content},
        </if>
    </set>
    WHERE faq_id = #{faq_id}
	</update>
	
	<delete id="deleteFaq" parameterType="String">
	    DELETE FROM T_SHOPPING_FAQ
	    WHERE faq_id = #{faq_id};
	</delete>
	
	<select id="FaqKeywordSearch" parameterType="faqVO" resultMap="faqResult"  >
	    SELECT *
		FROM (
		    SELECT temp_table.*, ROW_NUMBER() OVER (ORDER BY faq_id DESC) AS rnum
		    FROM (
		        SELECT *
		        FROM t_shopping_faq
		        WHERE faq_title LIKE CONCAT('%', #{keyword}, '%') OR faq_content LIKE CONCAT('%', #{keyword}, '%')
		        ORDER BY faq_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<insert id="insertFaq"  parameterType="faqVO">
  		insert into t_shopping_faq (faq_id,faq_title,faq_content,faq_date)
    	values ( ( SELECT MAX(faq_id) +1 FROM t_shopping_faq f),
    	#{faq_title},
    	#{faq_content},
    	now() )      
    </insert>
  
  
  <!-- Q&A -->
  	<select id="QnaList" parameterType="qnaVO" resultMap="qnaResult">
	    SELECT *
		FROM (
		    SELECT temp_table.*, @rownum:=@rownum+1 AS rnum
		    FROM (
		        SELECT *
		        FROM T_SHOPPING_QNA
		        CROSS JOIN (SELECT @rownum:=0) r
		        ORDER BY qna_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum};
	</select>
	
	<select id="selectQnaDetail" resultMap="qnaResult"   parameterType="String"  >
	    SELECT q.qna_id, m.member_name, q.qna_date, q.qna_title, q.qna_content, q.filename, q.qna_comment
		FROM t_shopping_qna q
		JOIN t_shopping_member m ON q.member_id = m.member_id
		WHERE q.qna_id = #{qna_id}
	</select>
	
	<update id="modifyQna" parameterType="java.util.HashMap">
	   UPDATE t_shopping_qna
		SET qna_comment = CASE
		    WHEN #{qna_comment} IS NOT NULL AND #{qna_comment} != '' THEN #{qna_comment}
		    ELSE NULL
		END,
		qna_status = CASE
		    WHEN #{qna_comment} IS NOT NULL AND #{qna_comment} != '' THEN 'Y'
		    ELSE 'N'
		END
		WHERE qna_id = #{qna_id}
	</update>	

	<select id="QnaKeywordSearch" parameterType="qnaVO" resultMap="qnaResult"  >
	    SELECT *
		FROM (
		    SELECT temp_table.*, ROW_NUMBER() OVER (ORDER BY qna_id DESC) AS rnum
		    FROM (
		        SELECT *
		        FROM t_shopping_qna
		        WHERE qna_title LIKE CONCAT('%', #{keyword}, '%') OR qna_content LIKE CONCAT('%', #{keyword}, '%')
		        ORDER BY qna_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	
	<!-- Review -->
  	<select id="ReviewList" parameterType="reviewVO" resultMap="reviewResult"   >
        SELECT * FROM (
	    SELECT temp_table.*, @rownum := @rownum + 1 AS rnum
	    FROM (
	        SELECT * FROM T_SHOPPING_REVIEW ORDER BY review_id DESC
	    ) temp_table, (SELECT @rownum := 0) r
	) AS derived_table
	WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="selectReviewDetail" resultMap="reviewResult"   parameterType="String"  >
	    <![CDATA[
		     select r.review_id, m.member_name, r.review_date, r.review_content, 
		     r.review_star, r.filename, r.review_comment from 
		     t_shopping_review r 
		     join t_shopping_member m on r.member_id = m.member_id 
		     where review_id=#{review_id}
    	]]>
	</select>
	
	<update id="modifyReview" parameterType="java.util.HashMap" >
	   update t_shopping_review
	    <set> 
	       <if test="review_comment != null and review_comment != ''">
		      review_comment = #{review_comment},
		    </if>
		    <if test="review_comment == null or review_comment == ''">
		      review_comment = NULL,
		    </if>
	     </set>
	    where 
	    review_id=#{review_id}
	
	</update>	

	<select id="ReviewKeywordSearch" parameterType="reviewVO" resultMap="reviewResult"  >
	    <![CDATA[
        SELECT *
		FROM (
		    SELECT temp_table.*, ROW_NUMBER() OVER (ORDER BY review_id DESC) AS rnum
		    FROM (
		        SELECT *
		        FROM t_shopping_review
		        WHERE review_content LIKE CONCAT('%', #{keyword}, '%') OR review_comment LIKE CONCAT('%', #{keyword}, '%')
		        ORDER BY review_id DESC
		    ) temp_table
		) AS derived_table
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
		]]>
	</select>
	
</mapper>
